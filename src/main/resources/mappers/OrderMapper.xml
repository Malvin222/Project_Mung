<!-- resources/mapper/UserMapper.xml -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project_mung.mapper.OrderMapper">


    <!-- 주문목록 조회 -->
    <select id="getOrderItems" resultType="com.project_mung.domain.Cart">
        SELECT * FROM cart WHERE cartid IN
        <foreach collection="cartids" item="cartid" open="(" separator="," close=")">
            #{cartid}
        </foreach>
    </select>

    <!--배송지 조회-->
    <select id="getDelivery">
        SELECT * FROM delivery WHERE userid = #{userid} ORDER BY deliveryid
    </select>

    <!--배송지 저장-->
    <insert id="insertDelivery">
        INSERT INTO delivery (userid
                         ,deliveryname
                         ,customername
                         ,deliveryaddress
                         ,deliverypostcode
                         ,deliverydetailaddr
                         ,customerphone)
        VALUES (#{userid}
               ,#{deliveryname}
               ,#{customername}
               ,#{deliveryaddress}
               ,#{deliverypostcode}
               ,#{deliverydetailaddr}
               ,#{customerphone})
    </insert>

    <!--배송지 수정-->
    <update id="modifyDelivery">
        UPDATE delivery SET deliveryname=#{deliveryname}
                          ,customername=#{customername}
                          ,deliveryaddress=#{deliveryaddress}
                          ,deliverypostcode=#{deliverypostcode}
                          ,deliverydetailaddr=#{deliverydetailaddr}
                          ,customerphone=#{customerphone}
        WHERE deliveryid = #{deliveryid}
    </update>

    <!--배송지삭제-->
    <delete id="deleteDelivery">
        DELETE FROM delivery WHERE deliveryid = #{deliveryid}
    </delete>

    <!--주문정보 저장-->
    <insert id="saveOrder">
        INSERT INTO `order` (userid,
                             paymentmethod,
                             deliveryid,
                             orderdate,
                             orderid)
        VALUES (#{userid}
               ,#{paymentmethod}
               ,#{deliveryid}
               ,NOW()
               ,#{orderid}
               )
    </insert>

    <update id="updateCart" parameterType="java.util.List">
        UPDATE cart SET orderid = #{orderid} WHERE cartid IN
        <foreach collection="cartid" item="cartid" open="(" separator="," close=")">
            #{cartid}
        </foreach>
    </update>

    <select id="getUserOrders" parameterType="string" resultType="com.project_mung.domain.Order">
        SELECT orderid
             , MAX(userid) as userid
             , MAX(paymentmethod) as paymentmethod
             , MAX(deliveryid) as deliveryid
             , MAX(orderdate) as orderdate
             , MAX(dogfoodid) as dogfoodid
             , COUNT(*) as countOrder
             , MAX(totalprice) as total_price
             , MAX(dogfoodname) as dogfoodname
        FROM (
                 SELECT o.orderid
                      , o.userid
                      , o.paymentmethod
                      , o.deliveryid
                      , o.orderdate
                      , c.dogfoodid
                      , (SELECT SUM(totalprice) FROM cart WHERE userid = #{userid} AND orderid = o.orderid) as totalprice
                      , c.dogfoodname
                 FROM `order` o
                          JOIN cart c ON o.orderid = c.orderid
                 WHERE o.userid = #{userid}
             ) t
        GROUP BY orderid
        ORDER BY orderdate DESC;

    </select>

    <select id="getOrderById" resultType="com.project_mung.domain.Cart">
        SELECT o.*, c.*
        FROM `order` o
                 JOIN cart c ON o.orderid = c.orderid
        WHERE o.orderid = #{orderid}
    </select>

</mapper>